{"version":3,"file":"static/js/387.680c3fad.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAGDC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADxB,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAIjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWR,GADzB,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIfI,EAAY,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADpC,cACpBI,EADoB,yBAEnBA,EAASC,KAAKK,MAFK,2CAAH,sDAIZC,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADjC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfM,EAAY,mCAAG,WAAMC,GAAN,uFACHd,EAAAA,EAAAA,IAAA,8BAAiCc,GAAab,GAD3C,cACpBI,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qD,wKC1BZQ,EAAOC,EAAAA,GAAAA,GAAH,8KAQJC,EAAOD,EAAAA,GAAAA,GAAH,8WAsBJE,IAVcF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uIAUDA,EAAAA,GAAAA,IAAH,iF,SCsBpB,EA9Ca,WACX,IAAQP,GAAYW,EAAAA,EAAAA,MAAZX,QACR,GAAwBY,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEOd,EAAAA,EAAAA,IAAaD,GAFpB,OAEVJ,EAFU,OAGhBiB,EAAQjB,GAHQ,gDAKhBoB,QAAQC,IAAR,MALgB,yDAAH,qDAQjBF,GACD,GAAE,CAACf,KAEF,gCACmB,IAAhBE,EAAKgB,SACJ,4BACE,wBAAI,iBACJ,SAACZ,EAAD,UACGJ,EAAKiB,KAAI,SAAAC,GAAK,OACb,UAACZ,EAAD,YACE,SAACC,EAAD,CACEY,MAAM,QACNC,OAAO,QACPC,IACEH,EAAMI,aAAN,0CACuCJ,EAAMI,cA9B/D,8EAiCgBC,IAAKL,EAAMM,iBAEb,uBAAIN,EAAMO,QACV,yBAAG,cAAYP,EAAMQ,eAZZR,EAAMS,GADJ,SAmBJ,IAAhB3B,EAAKgB,SACJ,yBAAK,wDAIZ,C","sources":["Api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7b34a3c54007436dcc2939a589b7d72f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  list-style: none;\n  padding: 0px;\n  margin: 0px;\n`;\nexport const Item = styled.li`\n  align-items: center;\n  background-color: rgba(255, 69, 0, 0.5);\n  border-radius: 5px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  transition: -webkit-transform 0.3s ease;\n  transition: transform 0.3s ease;\n  transition: transform 0.3s ease, -webkit-transform 0.3s ease;\n`;\nexport const LinkDetails = styled(Link)`\n  color: #000;\n  text-decoration: none;\n  margin: 1px;\n\n  &:hover,\n  &:focus {\n    color: #064e8a;\n  }\n`;\nexport const ImgFilm = styled.img`\n  display: block;\n  height: auto;\n  max-width: 100%;\n`;\n","import { getMovieCast } from 'Api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ImgFilm, Item, List } from './Cast.styled';\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const movieActors = async () => {\n      try {\n        const response = await getMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieActors();\n  }, [movieId]);\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div>\n          <h2>Movie cast </h2>\n          <List>\n            {cast.map(actor => (\n              <Item key={actor.id}>\n                <ImgFilm\n                  width=\"200px\"\n                  height=\"300px\"\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                      : defaultImg\n                  }\n                  alt={actor.original_name}\n                />\n                <p>{actor.name}</p>\n                <p>Character: {actor.character}</p>\n              </Item>\n            ))}\n          </List>\n        </div>\n      )}\n      {cast.length === 0 && (\n        <div> We haven't information about cast of this movie </div>\n      )}\n    </>\n  );\n};\nexport default Cast;\n"],"names":["axios","params","api_key","language","getTrendingMovies","response","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","handleSearch","movieName","List","styled","Item","ImgFilm","Link","useParams","useState","setCast","useEffect","movieActors","console","log","length","map","actor","width","height","src","profile_path","alt","original_name","name","character","id"],"sourceRoot":""}