{"version":3,"file":"static/js/186.52717f98.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAS,CACbA,OAAQ,CACNC,QALY,mCAMZC,SAAU,UAGDC,EAAiB,mCAAG,oGACRJ,EAAAA,EAAAA,IAAA,qBAAgCC,GADxB,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAIjBC,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWR,GADzB,cACvBI,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAIfI,EAAY,mCAAG,WAAMD,GAAN,uFACHT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADpC,cACpBI,EADoB,yBAEnBA,EAASC,KAAKK,MAFK,2CAAH,sDAIZC,EAAe,mCAAG,WAAMH,GAAN,uFACNT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,aAAuCR,GADjC,cACvBI,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,sDAKfM,EAAY,mCAAG,WAAMC,GAAN,uFACHd,EAAAA,EAAAA,IAAA,8BAAiCc,GAAab,GAD3C,cACpBI,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,qD,yGCazB,UApCgB,WACd,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMR,EAAAA,EAAAA,IAAgBH,GAFtB,OAEXJ,EAFW,OAGjBa,EAAWb,GAHM,gDAKjBgB,QAAQC,IAAR,MALiB,yDAAH,qDAQlBF,GACD,GAAE,CAACX,KAEF,gCACsB,IAAnBQ,EAAQM,SACP,4BACE,wBAAI,mBACHN,EAAQO,KAAI,SAAAC,GAAM,OACjB,yBACE,2BACE,yBAAG,UAAQA,EAAOC,WAClB,uBAAID,EAAOE,cAHNF,EAAOG,GADC,OAUH,IAAnBX,EAAQM,SACP,yBAAK,gDAIZ,C","sources":["Api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7b34a3c54007436dcc2939a589b7d72f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day`, params);\n  return response.data.results;\n};\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`, params);\n  return response.data;\n};\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?`, params);\n  return response.data.cast;\n};\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?`, params);\n  return response.data.results;\n};\n\nexport const handleSearch = async movieName => {\n  const response = await axios.get(`/search/movie?query=${movieName}`, params);\n  return response.data.results;\n};\n","import { getMovieReviews } from 'Api';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const movieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    movieReviews();\n  }, [movieId]);\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2> Movie Reviews</h2>\n          {reviews.map(review => (\n            <ul key={review.id}>\n              <li>\n                <p>Author:{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            </ul>\n          ))}\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["axios","params","api_key","language","getTrendingMovies","response","data","results","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","handleSearch","movieName","useParams","useState","reviews","setReviews","useEffect","movieReviews","console","log","length","map","review","author","content","id"],"sourceRoot":""}